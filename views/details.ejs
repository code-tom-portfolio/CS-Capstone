<!DOCTYPE html>
<html>
<meta charset="utf-8">

<head>

    <!-- For Google Sign in-->
    <meta name="google-signin-client_id"
        content="225358383782-6egbfm6sfsfl684m8hrblcu2je1e0nuq.apps.googleusercontent.com" />
    <!-- For Google API Sign in-->
    <script src="https://apis.google.com/js/platform.js" async defer></script>

    <!-- 3 files below are for the use of bootstrap formatting-->
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <!-- jQuery library -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <!-- Latest compiled JavaScript -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

    <!-- For font awesome icons-->
    <script src="https://kit.fontawesome.com/cc293f0187.js" crossorigin="anonymous"></script>

    <!-- html index file for project-->
    <title>Max Fantasy | <%= title %>
    </title>

    <style>
        body {
            padding: 1em;
            text-align: center;
            background-color: lightblue;
        }

        a {
            color: black;
            font-weight: bold;
        }

        a:hover {
            color: black;
            background-color: rgb(195, 238, 255);
            font-weight: bold;
        }

        h1 {
            color: black;
        }

        /* Style the tab */
        .tab {
            overflow: hidden;
            border: 1px solid #ccc;
            background-color: #f1f1f1;
        }

        /* Style the buttons that are used to open the tab content */
        .tab button {
            background-color: inherit;
            float: left;
            border: none;
            outline: none;
            cursor: pointer;
            padding: 14px 16px;
            transition: 0.3s;
        }

        /* Change background color of buttons on hover */
        .tab button:hover {
            background-color: #ddd;
        }

        /* Create an active/current tablink class */
        .tab button.active {
            background-color: #ccc;
        }

        /* Style the tab content */
        .tabcontent {
            display: none;
            padding: 6px 12px;
            border: 1px solid #ccc;
            border-top: none;
        }
    </style>
</head>

<body>
    <%- include('./partials/nav.ejs') %>
        <div class="row">
            <div class="col-sm-9"></div>
            <div class="g-signin2 col-sm-2" data-onsuccess="onSignIn"></div>
            <button class="btn col-sm-1" onclick="signOut()"><a href="index">Sign out</a></button>
        </div>
        <div class="tab">
            <button class="tablinks" onclick="openSect(event, 'MyTeam')">My Team</button>
            <button class="tablinks" onclick="openSect(event, 'MyRecommendations')">My Recommendations</button>

        </div>
        <div id="MyTeam" class="tabcontent">
            <p>Shows first team built by user</p>
            <p>To see new team, delete previous teams</p>
            <div class="details">
                <br>
                <% if (showTeam){ %>
                    <label>USER: </label>
                    <%= showTeam.userEmail %><br>
                        <label>QB: </label>
                        <%= showTeam.QB %><br>
                            <label>RB1: </label>
                            <%= showTeam.RB1 %><br>
                                <label>RB2: </label>
                                <%= showTeam.RB2 %><br>
                                    <label>WR1: </label>
                                    <%= showTeam.WR1 %><br>
                                        <label>WR2: </label>
                                        <%= showTeam.WR2 %> <br>
                                            <label>TE: </label>
                                            <%= showTeam.TE %> <br>
                                                <label>FLEX: </label>
                                                <%= showTeam.FLEX %> <br>
                                                    <label>DEFENSE: </label>
                                                    <%= showTeam.DEFENSE %> <br>
                                                        <label>K: </label>
                                                        <%= showTeam.K %> <br>
                                                            <label>BENCH1: </label>
                                                            <%= showTeam.BENCH1 %> <br>
                                                                <label>BENCH2: </label>
                                                                <%= showTeam.BENCH2 %> <br>
                                                                    <label>BENCH3: </label>
                                                                    <%= showTeam.BENCH3 %> <br>
                                                                        <label>BENCH4: </label>
                                                                        <%= showTeam.BENCH4 %> <br>
                                                                            <label>BENCH5: </label>
                                                                            <%= showTeam.BENCH5 %> <br>
                                                                                <label>BENCH6: </label>
                                                                                <%= showTeam.BENCH6 %> <br>
                                                                                    <label>BENCH7: </label>
                                                                                    <%= showTeam.BENCH7 %> <br>
                                                                                        <br />
                                                                                        <button class="btn"><a
                                                                                                class="delete"
                                                                                                data-doc="<%= showTeam._id %>">Delete
                                                                                                Team</a></button>
                                                                                        <% }else { %>
                                                                                            <p>no team to display...
                                                                                            </p>
                                                                                            <p>May not be signed in
                                                                                                OR no team has been
                                                                                                built</p>

                                                                                            <% } %>

            </div>
        </div>
        <div id="MyRecommendations" class="tabcontent">
            <h3>Your Recommendations</h3>
        </div>


        <script>
            const trashcan = document.querySelector('a.delete');
            trashcan.addEventListener('click', (e) => {
                const endpoint = `/myTeam/${trashcan.dataset.doc}`;

                fetch(endpoint, {
                    method: 'DELETE',
                })
                    .then(response => response.json())
                    .then(data => window.location.href = data.redirect)
                    .catch(err => console.log(err));
            });

            function openSect(evt, sect) {
                // Declare all variables
                var i, tabcontent, tablinks;

                // Get all elements with class="tabcontent" and hide them
                tabcontent = document.getElementsByClassName("tabcontent");
                for (i = 0; i < tabcontent.length; i++) {
                    tabcontent[i].style.display = "none";
                }

                // Get all elements with class="tablinks" and remove the class "active"
                tablinks = document.getElementsByClassName("tablinks");
                for (i = 0; i < tablinks.length; i++) {
                    tablinks[i].className = tablinks[i].className.replace(" active", "");
                }

                // Show the current tab, and add an "active" class to the button that opened the tab
                document.getElementById(sect).style.display = "block";
                evt.currentTarget.className += " active";
            }

            function onSignIn(googleUser) {
                var profile = googleUser.getBasicProfile();
                console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.
                console.log('Name: ' + profile.getName());
                //console.log('Image URL: ' + profile.getImageUrl());
                console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.

                document.getElementById("loadUser").value = profile.getEmail();
                document.getElementById("loadUser").innerHTML = profile.getEmail();
            }

            // For Sign Out
            function signOut() {
                var auth2 = gapi.auth2.getAuthInstance();
                auth2.signOut().then(function () {
                    console.log('User signed out.');
                });
            }
        </script>




</body>

</html>